# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: Install Nuget

- task: BatchScript@1
  displayName: Build Angular
  inputs:
    filename: '$(build.sourcesdirectory)\src\PokerLeagueManager.UI.Web\BuildAngular.bat'

- task: NuGetCommand@2
  displayName: Nuget Restore
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build Solutions
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: Run Tests
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: Copy Binaries
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: |
      **/*.dacpac 
      **/PokerLeagueManager.Commands.WebApi.zip
      **/PokerLeagueManager.Events.WebApi.zip
      **/PokerLeagueManager.Queries.WebApi.zip
      **/PokerLeagueManager.UI.Web.zip
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: CopyFiles@2
  displayName: Copy Deployment files
  inputs:
    SourceFolder: '$(build.sourcesdirectory)/deploy'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/deploy'

- task: CopyFiles@2
  displayName: Copy Utilities
  inputs:
    SourceFolder: '$(build.sourcesdirectory)/src/PokerLeagueManager.Utilities/bin/$(buildconfiguration)'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/Utility'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
